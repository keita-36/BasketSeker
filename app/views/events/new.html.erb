<div class="max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto mb-40">
    <div class="mx-auto max-w-2xl">
        <div class="text-center">
            <h1 class="ext-xl text-gray-800 font-bold sm:text-3xl dark:text-white">イベント作成</h1>
        </div>
        <div class="mt-5 p-4 relative z-10 bg-white border rounded-xl sm:mt-10 md:p-10 dark:bg-gray-800 dark:border-gray-700">
            <%= form_with model: @event, local: true, data: { turbo: false }, class: "space-y-4 text-center" do |f| %>
                <div class="field mb-4 sm:mb-8">
                    <%= f.label :タイトル, class: "block mb-2 text-sm font-black dark:text-white text-left" %>
                    <%= f.text_field :title, class: "py-3 px-4 block w-full border rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600" %>
                </div>
                <div class="field mb-4 sm:mb-8">
                    <%= f.label :内容, class: "block mb-2 text-sm font-black dark:text-white text-left font-black" %>
                    <%= f.text_area :content, class: "py-3 px-4 block w-full border rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600" %>
                </div>
                <div class="field mb-4 sm:mb-8">
                    <%= f.label :日時, class: "block mb-2 text-sm font-black dark:text-white text-left" %>
                    <%= f.datetime_field :datetime, class: "py-3 px-4 block w-full border rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600" %>
                </div>
                <%= f.hidden_field :latitude %>
                <%= f.hidden_field :longitude %>
                <p class="text-left"><span class="font-black text-sm">住所</span> <br> <span id="address_text" class="text-gray-300 py-3 px-4 block w-full border rounded-lg text-sm focus:border-blue-500 focus:ring-blue-500 disabled:opacity-50 disabled:pointer-events-none dark:bg-slate-900 dark:border-gray-700 dark:text-gray-400 dark:focus:ring-gray-600"><%= @address || 'ピンを合わせてください' %></span></p>
                <div id='new-map' class='h-96 max-w-7xl mx-auto relative mb-40'></div>
                <div class="actions mt-6 grid">
                    <%= f.submit class: "w-full py-3 px-4 inline-flex justify-center items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600" %>
                </div>
            <% end %>
        </div>
    </div>
</div>

<script>
    let newMap;
    let marker;

    function initMap() {
        // マップの初期化処理
        let LatLng = new google.maps.LatLng(<%= @event&.latitude || 35.683512 %>, <%= @event&.longitude || 139.691712 %>);

        // 取得した位置情報を中心に表示
        newMap = new google.maps.Map(document.getElementById('new-map'), {
            center: LatLng,
            zoom: 15,
            gestureHandling: 'cooperative',
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
                position: google.maps.ControlPosition.TOP_LEFT,
                mapTypeIds: ['roadmap', 'terrain']
            }
        });

        newMap.addListener('click', function(e) {
            addMarker(e.latLng);
            document.getElementById('event_latitude').value = e.latLng.lat();
            document.getElementById('event_longitude').value = e.latLng.lng();
            // document.getElementById('latitude_text').innerText = e.latLng.lat();
            // document.getElementById('longitude_text').innerText = e.latLng.lng();

            // 逆ジオコーディングを行う
            const geocoder = new google.maps.Geocoder();
            geocoder.geocode({ location: e.latLng }, function(results, status) {
                if (status === 'OK') {
                    if (results[0]) {
                        document.getElementById('address_text').innerText = results[0].formatted_address;
                        document.getElementById('address_text').style.color = 'black'; 
                    } else {
                        window.alert('No results found');
                    }
                } else {
                    window.alert('Geocoder failed due to: ' + status);
                }
            });
        });

        addMarker({
            lat: <%= @event&.latitude || 35.683512 %>,
            lng: <%= @event&.longitude || 139.691712 %>,
        });
    }

    function addMarker(location) {
        // 既存のマーカーを削除
        if (marker) {
            marker.setMap(null);
        }
        // 新しいマーカーを作成
        marker = new google.maps.Marker({
            position: location,
            map: newMap
        });
    }
</script>

<!-- Google Maps APIのスクリプト読み込み -->
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['APIKEY'] %>&callback=initMap" async defer></script>
